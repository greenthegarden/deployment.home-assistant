---

- name: Install and configure monitoring service on nodes within the monitoring_instances group
  
  hosts: monitoring_instances

  vars:

    node_exporter_port: 9100

    prometheus_service_port: 9090
    # prometheus_bind_address: "{{ ansible_eth1.ipv4.address }}"

    file_scrape_config_dir: "/etc/prometheus"

    services_hosts: "\
      {% set _inventory_servers = [] %}\
      {% for host in groups['all'] %}\
      {% if _inventory_servers.append(host) %}{% endif %}\
      {% endfor %}\
      {{ _inventory_servers }}"

    prometheus_bind_address: "\
      {% if ansible_system == 'FreeBSD' %}\
        {{ lookup('env','PROMETHEUS_BIND_ADDRESS') | default(hostvars[inventory_hostname]['ansible_'+ public_iface ]['ipv4'][0]['address'], true) }}\
      {% elif ansible_os_family == 'Windows'  %}\
        {{ lookup('env','PROMETHEUS_BIND_ADDRESS') | default(hostvars[inventory_hostname]['ansible_ip_addresses'][0], true) }}\
      {% else %}\
        {{ lookup('env','PROMETHEUS_BIND_ADDRESS') | default(hostvars[inventory_hostname]['ansible_'+ public_iface | replace('-', '_')]['ipv4']['address'], true) }}\
      {% endif %}"

    prometheus_targets:
      node:
      - targets:
        - localhost:9100
      #   {% for host in services_hosts %} \
      #   - '{{ host }}:{{ node_exporter_port }}' \
      #   {% endfor %}
        labels:
          job: hosts_metrics

    prometheus_scrape_configs:
      - job_name: "prometheus"    # Custom scrape job, here using `static_config`
        metrics_path: "/metrics"
        static_configs:
          - targets:
              - "localhost:9090"
      - job_name: "example-node-file-servicediscovery"
        file_sd_configs:
          - files:
              - "{{ prometheus_config_dir }}/file_sd/node.yml" # This line loads file created from `prometheus_targets`

  pre_tasks:

    - name: Install dependencies
      become: yes
      import_role:
        name: greenthegarden.configure-host
        tasks_from: install-dependencies
      tags:
        - base
        - dependencies
        
  tasks:

    - name: Create Prometheus config directory
      become: true
      file:
        dest: "{{ file_scrape_config_dir }}"
        state: directory

    - name: "Generate file scrape config for Prometheus"
      become: true
      template:
        src: datacenter_hosts.yml.j2
        dest: "{{ file_scrape_config_dir }}/datacenter_hosts.yml"

    - name: "Unregister Prometheus service with the local consul agent"
      consul:
        host: "{{ consul_client_address }}"
        service_name: prometheus
        # service_port: "{{ prometheus_service_port }}"
        state: absent
      when: service_consul_running

    - name: Install Prometheus
      become: yes
      import_role:
        name: cloudalchemy.prometheus

    # Register service from controller
    - name: Register Prometheus service with Consul
      # delegate_to: "{{ ansible_controller }}"
      consul:
        host: "{{ consul_client_address }}"
        service_name: prometheus
        service_port: "{{ prometheus_service_port }}"
        service_address: "{{ prometheus_bind_address }}"
        interval: 60s
        http: "http://{{ prometheus_bind_address }}:{{ prometheus_service_port }}/api/v1/status/runtimeinfo"
      when: service_consul_running
